{
    "query": "<s> what was suggested to incorporate the eva into the bayes-net ?",
    "answer": "professor b : so that uh , if you know about it let 's say , a particular town hall that , it 's one that is a monument , then , that would be stored there . if you do n't , you look up the hierarchy , eh so , you you you may or so , then you 'd have this little vector of , um , you know , approach mode or eva mode . let 's ok , so we have the eva vector for for various kinds of landmarks . if you know it for a specific landmark you put it there . if you do n't , you just go up the hierarchy to the first place you find one . grad d : ok . so , is the idea to put it in the ontology ? professor b : absolutely . uh , or , link to or but but in any case i view it logically as being in the ontology . it 's part of what you know about a an object , is its eva vector . and , if yo as i say , if you know about a specific object , you put it there . grad d : mm - hmm . professor b : this is part of what dekai was doing . so , when we get to wu , the - e we 'll see w what he says about that . grad d : right . professor b : and , then if you if it is n't there , it 's higher , and if you do n't know anything except that it 's a b it 's it 's a building , then up at the highest thing , you have the pr what amounts to a prior . if you do n't know anything else about a building , uh , you just take whatever your crude approximation is up at that level , grad d : right . professor b : which might be equal , or whatever it is . grad d : yeah . professor b : so , that 's a very pretty relationship between these local vectors and the ontology . and it seems to me the obvious thing to do , unless we find a reason to do something different . grad d : yeah . professor b : does this make sense to you ? grad d : so professor b : bhask - ? grad d : yeah . so , we are but we we 're not doing the ontology , so we have to get to whoever is doing the u ultimately , professor b : indeed . so , that 's another thing we 're gon na need to do , is is , to , either grad d : we have to get them to professor b : we 're gon na need some way to either get a p tag in the ontology , or add fields , or { comment } { comment } some way to associate or , w it may be that all we can do is , um , some of our own hash tables that it th - the th you know , there 's always a way to do that . it 's a just a question of grad a : yeah , hash on object name to , you know , uh , the probabilities or whatever . professor b : i th yeah . e right . and , so , i uh grad c : but it 's , uh well , it strikes me as a what for if we get the mechanism , that will be sort of the wonderful part . and then , how to make it work is is the second part , in the sense that i mean , m the guy who was doing the ontology eh , eh , s ap apologized that i it will take him another through two to three days because they 're having really trouble getting the upper level straight , and right now . the reason is , given the craw bet uh , the the the projects that all carry their own taxonomy and , on all history , they 're really trying to build one top level ontology ft that covers all the eml projects , and that 's , uh , uh , sort of a tough cookie , a little bit tougher than they figured . i could have told them s so . professor b : right . yeah . grad c : uh . but , nevertheless , it 's going to be there by n by , uh , next monday and i will show you what 's what some examples from that for towers , and stuff . and , um , what i do n't think is ever going to be in the ontology , is sort of , you know , the likelihood of , eh , people entering r town halls , and looking at town halls , and approaching town halls , especially since we are b dealing with a case - based , not an instance - based ontology . so , there will be nothing on on that town hall , or on the berkeley town hall , or on the heidelberg town hall , it 'll just be information on town halls . professor b : well , they they they how ar what are they gon na do with instances ? grad c : but what professor b : i mean , you y grad c : well , that 's hhh . that 's that 's al different question . i mean , th the first , they had to make a design question , `` do we take ontologies that have instances ? or just one that does not , that just has the types ? `` and , so , since the d decision was on types , on a d simply type - based , we now have to hook it up to instances . i mean this is professor b : but what i what is smartkom gon na do about that ? grad c : one professor b : cuz , they have instances all the time . grad c : yeah , but the ontology is really not a smartkom thing , in in and of itself . that 's more something that i kicked loose in in eml . so it 's a completely eml thing . professor b : but uh uh smartkom 's gon na need an ontology . grad c : yes , u a w a lot of people are aware of that . professor b : i understand , but is anybody doing anything about it ? grad c : um professor b : ok . it 's a political problem . we wo n't worry about it . grad c : no , but th the r eh i th i still think that there is enough information in there . for example , whether ok . so , th it will know about the twenty object types there are in the world . let 's assume there are only twenty object types in this world . and it will know if any of those have institutional meanings . so , in a sense , `` i `` used as institutions for some s in some sense or the other . which makes them enterable . right ? in a sense . professor b : yeah . anyway . so we may have to grad c : you know . professor b : this is with the whole thing , we may have to build another data stru conceptually , we know what should be done . when we see what people have done , it may turn out that the easiest thing to do is to build a a separate thing that that just pools i i like , i i it it may be , that , the the instance w that we have to build our own instance , uh , things , that , with their types , grad d : yeah , it 's right , we can just assume professor b : and then it goes off to the ontology once you have its type . so we build a little data structure and so what we would do in that case , is , in our instance gadget have our e v and if we d there is n't one we 'd get the type and then have the e v as for the type . so we 'd have our own little , uh , eva tree . and then , for other , uh , vectors that we need . grad d : yeah . right . professor b : so , we 'd have our own little things so that whenever we needed one , we 'd just use the ontology to get the type , grad d : mm - hmm . professor b : and then would hash or whatever we do to say , `` ah ! grad d : mm - hmm . professor b : if it 's that type of thing , and we want its eva vector , pppt - pppt ! { comment } it 's that . `` so , i i think we can handle that . and then but , the combination functions , and whether we can put those in java bayes , and all that sort of stuff , is , uh is the bigger deal . grad d : yeah . professor b : i think that 's where we have to get technically clever . grad a : we could just steal the classes in javabayes and then interface to them with our own code . grad d : um professor b : well , i me ye eh , yeah , the grad d : that requires understanding the classes in javabayes , i guess . @ @ . professor b : yeah , i mean , it 's , uh , e e e e e cute . i mean , you 've been around enough to i mean just ? grad a : well , it depends on professor b : i mean , there 's this huge package which which may or may not be consistent and you know . but , yeah , we could look at it . grad a : well , i was j ok . yeah . professor b : yeah . it 's b it it 's an inter sort of a kind of a it the thing is , it 's kind of an interpreter and i i it expects its data structures to be in a given form , and if you say , `` hey , we 're gon na make a different kind of data structure to stick in there `` grad a : well , no , but that just means there 's a protocol , right ? that you could professor b : it may or may not . i do n't know . that 's the question is `` to what extent does it allow us to put in these g functions ? `` and i do n't know . grad a : well , no , but i mean what i uh the so you could have four different bayes - nets that you 're running , and then run your own write your own function that would take the output of those four , and make your own `` g function `` , is what i was saying . professor b : yeah , that 's fine if it 's if it comes only at the end . but suppose you want it embedded ? grad a : well , then you 'd have to break all of your bayes - nets into smaller bayes - nets , with all the professor b : oh , that yeah , that 's a truly horrible way to do d it . one would hope grad a : yeah , but i 'm just grad c : mm - hmm . professor b : yeah , yeah , yeah , yeah , yeah , you bet . but , at that point you may say , `` hey , java bayes is n't the only package in town . let 's see if there 's another package that 's , eh , more civilized about this . `` now , srini is worth talking to on this ,"
}