{
    "query": "<s> what did c think about the disadvantages of atlas and other options ?",
    "answer": "grad c : i guess i 'm just a little hesitant to try to go whole hog on sort of the the whole framework that that nist is talking about , with atlas and a database and all that sort of stuff , phd f : so grad c : cuz it 's a big learning curve , just to get going . whereas if we just do a flat file format , sure , it may not be as efficient but everyone can program in perl and and use it . right ? phd a : but this is grad c : so , as opposed to phd a : i i 'm still , um , not convinced that you can do much at all on the text on the flat file that that you know , the text representation . e because the text representation is gon na be , uh , not reflecting the structure of of your words and annotations . it 's just it 's grad c : well , if it 's not representing it , then how do you recover it ? of course it 's representing it . yeah . i think that there are quick and dirty solutions , phd f : i mean , for me . grad c : and then there are long - term , big - infrastructure solutions . and so we want to try to pick something that lets us do a little bit of both . phd f : in the between , right . and especially that the representation does n't have to be thrown away , grad c : um right . phd f : even if your tools change . grad c : and so it seems to me that i mean , i have to look at it again to see whether it can really do what we want , but if we use the atlas external file representation , um , it seems like it 's rich enough that you could do quick tools just as i said in perl , and then later on if we choose to go up the learning curve , we can use the whole atlas inter infrastructure , i mean , th the reason i like p - file is i 'm already familiar with it , we have expertise here , and so if we pick something else , there 's the learning - curve problem . but , i mean , it is just something we developed at icsi . phd a : is there an is there an ip - api ? grad c : and so yeah . there 's an api for it . and , uh , phd a : there used to be a problem that they get too large , grad c : a bunch of libraries , p - file utilities . phd a : and so basically the uh the filesystem would n't grad c : well , that 's gon na be a problem no matter what . you have the two - gigabyte limit on the filesystem size . and we definitely hit that with broadcast news . phd a : maybe you could extend the api to , uh , support , uh , like splitting up , you know , conceptually one file into smaller files on disk so that you can essentially , you know , have arbitrarily long f grad c : yep . most of the tools can handle that . phd a : yeah . grad c : so that we did n't do it at the api - level . we did it at the t tool - level . that that most many of them can s you can specify several p - files and they 'll just be done sequentially ."
}