{
    "query": "<s> summarize the meeting .",
    "answer": "grad a : yeah , i think i got my mike on . ok . let 's see . professor b : ok . ami , do yours then we 'll open it and i think it 'll be enough . grad a : mmm does n't , uh it should be the other way . yeah , now it 's on . phd f : right . ok . professor b : ok . so , we all switched on ? grad a : we are all switched on , yeah . professor b : alright . anyway . so , uh , before we get started with the , uh , technical part , i just want to review what i think is happening with the our data collection . phd f : we are all switched on . professor b : so uh , probably after today , that should n't come up in this meeting . th - this this is s should be im it is n't there 's another thing going on of gathering data , and that 's pretty much independent of this . but , uh , i just want to make sure we 're all together on this . what we think is gon na happen is that , uh , in parallel starting about now we 're gon na get fey to , where you 're working with me and robert , draft a note that we 're gon na send out to various cogsci c and other classes saying , `` here 's an opportunity to be a subject . contact fey . `` and then there 'll be a certain number of um , hours during the week which she will be available and we 'll bring in people . uh , roughly how many , robert ? we d do we know ? grad c : um , fifty was our sort of our first professor b : ok . so , we 're looking for a total of fifty people , not necessarily by any means all students but we 'll s we 'll start with with that . in parallel with that , we 're gon na need to actually do the script . and , so , i guess there 's a plan to have a meeting friday afternoon uh , with uh , jane , and maybe liz and whoever , on actually getting the script worked out . but what i 'd like to do , if it 's o k , is to s to , as i say , start the recruiting in parallel and possibly start running subjects next week . the week after that 's spring break , and maybe we 'll look for them some subjects next door grad c : yeah . professor b : or i grad c : yeah . also , fey will not be here during spring break . professor b : oh , ok , then we wo n't do it . ok . so that 's easy . um . so , is is that make sense to everybody ? grad c : yeah . also , um , f both fey and i will , um , do something of which i may , eh kindly ask you to to do the same thing , which is we gon na check out our social infrastructures for possible subjects . meaning , um , kid children 's gymnastic classes , pre - school parents and so forth . they also sometimes have flexible schedules . so , if you happen to be sort of in a non - student social setting , and you know people who may be interested in being subjects we also considered using the berkeley high school and their teachers , maybe , and get them interested in stuff . professor b : that 's a good idea . grad c : and , um . so that 's as far as our brainstorming was concerned . professor b : oh , yeah . the high school 's a great idea . grad c : so . but i i will just make a first draft of the , uh , note , the `` write - up `` note , send it to you and fey and then professor b : and why do n't you also copy jane on it ? grad c : and , um , are we have we concurred that , uh , these these forms are sufficient for us , and necessary ? professor b : uh , th i think they 're necessary . this the permission form . uh , there has to be one , grad c : nuh . n . professor b : and i think we 're just gon na use it as it is , and um grad c : n . you happy with that ? professor b : well , yeah . there 's one tricky part about , um , they have the right um i the last paragraph { comment } `` if you agree to participate you have the opportunity to have anything excised which you would prefer not to have included in the data set . `` ok ? now that , we had to be included for this other one which might have , uh , meetings , you know , about something . grad c : mm - hmm . professor b : in this case , it does n't really make sense . um , so what i 'd like to do is also have our subjects sign a waiver saying `` i do n't want to see the final transcript `` . grad c : mm - hmm . professor b : and if they do n't if they say `` no , i 'm not willing to sign that `` , then we 'll show them the final transcript . but , um . grad c : yep . makes sense . professor b : that , uh yeah , so we might actually , um s i jane may say that , `` you know , you ca n't do this `` , uh , `` on the same form , we need a separate form . `` but anyway . i 'd i 'd i 'd like to , e e um , add an a little thi eh a thing for them to initial , saying `` nah , do i do n't want to see the final transcript . `` grad c : mm - hmm . professor b : but other than that , that 's one 's been approved , this really is the same project , uh , rec you know . and so forth . so i think we just go with it . grad c : yeah . yeah . ok . so much for the data , except that with munich everything is fine now . they 're gon na transcribe . they 're also gon na translate the , uh , german data from the tv and cinema stuff for andreas . so . they 're they all seem to be happy now , with that . so . w c sh should we move on to the technical sides ? well i guess the good good news of last week was the parser . so , um bhaskara and i started working on the the parser . then bhaskara went to class and once he came back , um , it was finished . so . it , uh i did n't measure it , but it was about an hour and ten minutes . and , um and now it 's we have a complete english parser that does everything the german parser does . grad d : something like that . professor b : which is not a lot . but grad d : that 's the , uh , point . grad c : the uh , that 's not a lot . professor b : right . grad c : and um . grad e : what did you end up having to do ? i mean , wha was there anything interesting about it at all ? grad c : well , if you , eh grad d : we 'll show you . professor b : yeah , we can show us , grad e : or are we gon na see that ? professor b : right ? grad c : well , w w we d the first we did is we we tried to to do change the the `` laufen `` into `` run `` , or `` running `` , or `` runs `` . and we noticed that whatever we tried to do , it no effect . grad e : mm - hmm . grad c : and we were puzzled . and , uh , the reason was that the parser i c completely ignores the verb . grad e : mm - hmm . grad c : so this sentence sentence is parses the p the same output , grad e : hmm . interesting parser property . grad c : um , even if you leave out , um , all all of this . grad e : i see . yeah . grad c : so it 's basically feature film and tv . that 's what you need . if if you 'd add add today and evening , it 'll add time or not . grad e : and the t and the time , right ? grad c : so it i it does look at that . but all the rest is p simply frosting on the cake , and it 's optional for that parser . grad e : true . professor b : so , you can sho you you are are you gon na show us the little templates ? grad c : and yeah . we ar we can sh er i can show you the templates . i i also have it running here , grad e : the former end g `` oh , i see . uh - huh . grad c : so if i do this now , um , you can see that it parsed the wonderful english sentence , `` which films are on the cinema today evening ? `` but , um . professor b : well , that sounds grad c : uh do do n't worry about it . it could be `` this evening , which which films are on the cinema `` , or `` running in the cinema , which `` uh , `` today evening `` , uh i `` is anything happening in the cinema this evening ? `` grad e : ok . ok . key words , e basically . grad c : ge - elaborate , or , more or less , uh professor b : actually , it 's a little tricky , in that there 's some allowable german orders which are n't allowable english orders and so forth . and it is order - based . so it it is n't it ? oh . so it it doe i it these u these optional elements , grad c : it is not professor b : it 's it 's actually a set , not a sequence ? grad c : yeah . we were i was afraid that , um grad e : so it really is key word matching , basically . professor b : really a se phd f : e yeah . mm - hmm . professor b : oh , wow . grad c : um , i mean , these sentences are just silly . i mean , uh , d these were not the ones we we actually did it . um . what 's an idiomatic of phrasing this ? which films are showing ? grad d : are pl playing at the cinema ? grad c : playing ? grad d : yeah . grad e : tonight ? grad d : i changed that file , actually , where it 's on my account . grad e : this this evening ? phd f : actually , you would say , `` which films are on tonight ? `` grad d : you want to get it ? or is di was it easy to get it ? grad c : um . i have no net here . grad d : oh , ok . professor b : do i ? grad c : ok . so . wonderful parse , same thing . um . professor b : right . grad c : except that we d w we do n't have this , uh , time information here now , which is , um oh . this are the reserve . anyways . so . um . these are the sort of the ten different sentence types that the uh the parser was able to do . and it still is , now in english . professor b : yeah . grad e : mm - hmm . grad c : and , um sorry . and , um you have already to make it a little bit more elaborate , right ? grad d : yeah , i mean i changed those sentences to make it , uh , more , uh , idiomatic . and , of course , you can have i many variations in those sentences , they will still parse fine . so , in a sense it 's pretty broad . grad c : ok . so , if you want to look at the templates , they 're conveniently located in a file , `` template `` . um , and this is what i had to do . i had to change , @ @ { comment } `` spielfilm `` to `` film `` , uh , `` film `` to `` movie `` , cinem `` kino `` to `` cinema `` to `` today `` heu `` heute `` to `` today `` , evening `` abend `` to `` evening `` professor b : capitalized as well grad c : and , um . grad d : one thing i was wondering , was , those functions there , are those things that modify the m - three - l basically ? grad c : and that 's that 's the next step , but we 'll get to that in a second . and so this means , um , `` this `` and `` see `` are not optional . `` want i like `` is all maybe in there , but may also not be in there . professor b : so so , the point is , if it says `` this `` and `` see `` , it also will work in `` see `` and `` this `` ? in the other order ? grad c : yeah . professor b : with those two key words ? grad c : should we try it ? professor b : `` this is the one i want to see `` or whatever . grad c : ok . `` action watch `` , whatever . nothing was specialfi specified . except that it has some references to audio - visual media here . grad d : av medium . grad c : where it gets that from grad d : yeah . grad c : it 's correct , but i do n't know where it gets it from . grad d : `` see `` . grad c : oh , `` see `` . yeah . yeah . yep . ok . grad d : i mean it 's sort of grad c : and `` see this `` { comment } is exactly the same thing . professor b : ok , so it is set - based . alright . grad d : one thing i was wondering was , those percentage signs , right ? so , i mean , why do we even have them ? because if you did n't have them grad c : uh , i 'll tell you why . because it gives a you a score . grad e : mm - hmm . grad c : and the value of the score is , v i assume , i guess , the more of these optional things that are actually in there , the higher the r score it is . grad d : oh . ok . so that 's the main purpose . alright . grad e : it 's a match . phd f : right . grad e : mm - hmm . grad c : so we we should n't belittle it too much . it 's doing something , some things , and it 's very flexible . i 've just tried to grad e : mm - hmm . grad c : be nice . phd f : right . professor b : no , no . fine . grad e : right yeah . professor b : yeah , yeah , yeah , flexible it is . phd f : but grad c : ok . um , let 's hope that the generation will not be more difficult , even though the generator is a little bit more complex . uh but we 'll mmm , that means we may need two hours and twenty minutes rather than an hour ten minutes , professor b : alright . grad c : i hope . grad d : right . grad c : and the next thing i would like to be able to do , and it seems like this would not be too difficult either , is to say , `` ok let 's now pretend we actually wanted to not only change the the mapping of of , uh , words to the m - three - l but we also wanted to change add a new sentence type and and make up some some new m - three - l s `` professor b : yep . so that 'd be great . it would be a good exercise to just see whether one can get that to run . grad c : see th mm - hmm . yep . and , um , grad d : so , that 's grad c : that 's should n't be too tough . grad d : fine , yeah . yeah , so where are those those functions `` action `` , `` goodbye `` , and so on , right ? are they actually , um , are they going to be called ? um , are they present in the code for the parser ? grad c : yeah . i think what it does , it i i it does something sort of fancy . it loads um it has these style sheets and also the , um , schemata . so what it probably does , is it takes the , uh , um is this where it is ? this is already the xml stuff ? this is where it takes its own , um , syntax , and converts it somehow . um . where is the uh grad d : what are you looking for ? grad c : um , where it actually produces the the xml out of the , uh , parsed stuff . grad d : oh , ok . grad c : no , this is not it . uh . i ca n't find it now . you mean , where the where the act how the action `` goodbye `` maps into something grad d : yeah . grad a : yeah , where are those constructors defined ? grad c : nope . grad d : no , that 's not it . grad c : yeah . this is sort of what happens . this is what you would need to to change to get the , uh , xml changed . so when it encounts encounters `` day `` , it will , uh , activate those h classes in the in the xml stuff but , um i saw those actions uh , the `` goodbye `` stuff somewhere . hmm , hmm , hmm , hmm , hmm . grad a : grep for it ? grad c : yeah . let 's do that . oh . grad d : mmm . m - three - l dot dtd ? that 's just a specification for the xml format . grad c : yep . well , we 'll find that out . so whatever n this does i mean this is , basically , looks l to me like a function call , right ? professor b : hmm ? oh , yeah . grad c : and , um so , whenever it it encounters `` goodbye `` , which we can make it do in a second , here grad a : that function automatically generates an initialized xml structure ? grad d : i think each of those functions act on the current xml structure , and change it in some way , for example , by adding a a l a field to it , or something . professor b : y yeah . they also seem to affect state , grad c : mm - hmm . professor b : cause some of them there were other actions uh , that that s seemed to step state variables somewhere , grad d : right . professor b : like the n s `` discourse status confirm `` . ok . so that 's going to be a call on the discourse and confirm that it 's grad c : w we mm - hmm grad d : oh , you mean that 's not going to actually modify the tree , professor b : i think that 's right . grad d : but it 's going to change the event . professor b : i think it 's actually that looks like it 's state modification . grad d : oh . oh . grad c : e mmm um , well i there is a feature called `` discourse - status `` , grad d : when there 's a feature . professor b : yeah . grad c : and so whenever i just say , `` write `` , it will it will put this in here . professor b : oh , so it always just is it so it well , go back , then , cuz it may be that all those th things , while they look like function calls , are just a way of adding exactly that to the xml . grad c : h yep . professor b : uh - huh ! i 'm not i 'm not sure . grad c : so , this professor b : e i 'm not sure e that grad c : um well , we we 'll see , when we say , let 's test something , `` goodbye `` , causes it to c to create basically an `` action goodbye - end - action `` . professor b : right . grad c : which is a means of telling the system to shut down . professor b : right . grad c : now , if we know that `` write `` produces a `` feature discourse - status confirm discourse - status `` . so if i now say `` write , goodbye , `` it should do that . it sho it creates this , grad d : mm - hmm . professor b : right . grad c : `` confirm goodbye `` . grad d : right there . but there is some kind of function call , because how does it know to put goodbye in content , but , uh , confirm in features ? grad c : oh . it d it n that 's because grad d : so so , it 's not just that it 's adding that field . professor b : right . absolutely . good point . it 's it 's the it 's under what sub - type you 're doing it . yeah . grad c : mm - hmm . yeah . grad a : it 's mystery functions . grad c : well , sometimes it m sometimes , i grad d : well , they 're defined somewhere , presumably . professor b : yeah , each is s so that 's funny . grad c : when it professor b : you bury the s the state in the function alright . grad c : it grad a : well , it just automatically initializes things that are common , right ? so it 's just a shorthand . professor b : yeah . grad c : for example oh , this is german . sorry . e so , now , this , it can not do anymore . nothing comes out of here . grad a : a `` not a number `` is a value . awesome . grad c : so , it does n't speak german anymore , but it does speak english . and there is , here , a reference so , this tells us that whatever is has the id `` zero `` is referenced here by @ @ { comment } the restriction seed and this is exa `` i want `` what was the sentence ? professor b : `` i want two seats here . `` grad c : `` need two seats here . `` nuh . `` and where is it playing ? `` there should also be a reference to something , maybe . our d this is re um mmm . here , we change and so , we here we add something to the discourse - status , that the user wants to change something that was sort of done before and , uh and that , whatever is being changed has something to do with the cinema . grad a : so then , whatever takes this m - three - l is what actually changes the state , not the yeah , ok . professor b : no , right , the discourse maintainer , grad a : yeah . professor b : yeah . i see . and it and it runs around looking for discourse status tags , and doing whatever it does with them . and other people ignore those tags . alright . so , yeah . i definitely think it 's it 's worth the exercise of trying to actually add something that is n't there . uh disc grad c : sort of get a complete understanding of the whole thing . professor b : yeah , a kid understanding what 's going on . then the next thing we talked about is actually , um , figuring out how to add our own tags , and stuff like that . grad c : ok . point number two . i got the , uh , m - three - l for the routes today . uh , so i got some more . this is sort of the uh , um , hmm . interesting . it 's just going up , it 's not going back down . so , this is um , what i got today is the the new um m - three - l for um , the maps , uh , and with some examples so , this is the xml and this is sort of what it will look like later on , even though it you ca n't see it on on this resolution . and this is what it sort of is the the structure of map requests , um also not very interesting , and here is the more interesting stuff for us , is the routes , route elements , and , again , as we thought it 's really simple . this is sort of the , uh , um , parameters . we have @ @ { comment } simple `` from objects `` and `` to objects `` and so forth , points of interest along the way and , um , i asked them whether or not we could , um first of all , i was little bit it seemed to me that this m way of doing it is sort of a stack a step backwards from the way we 've done it before . t it seems to me that some notions were missing . so these are these are professor b : so these are these are your friends back at eml . grad c : yep . who are doing this . professor b : so this is not a complicated negotiation . there 's there 's not seven committees , or anything , right ? grad c : no . no , this is very straightforward . professor b : great . so this is just trying to it 's a design thing , not a political thing . once we 've eh we can just sort of agree on what oughta be done . grad c : yeah . professor b : good . grad c : exactly . and , um and , uh however , the , uh e so that you understand , it is really simple . uh you you have a route , and you cut it up in different pieces . and every every element of that e r r f of that every segment we call a `` route element `` . and so , from a to b we cut up in three different steps , and every step has a `` from object `` where you start , a `` to object `` where y where you sort of end , and some points of interest along the way . what w i was sort of missing here , and uh , maybe it was just me being too stupid , is , i did n't sort of get the the notion of the global goal of the whole route . really , s was not straightforward visibly for me . and some other stuff . and i suggested that they should n be k uh , kind enough to do s two things for us , is one , um , also allocating , uh , some tags for our action schema enter - vista - approach , and and also , um , since you had suggested that that , um , we figure out if we ever , for a demo reason , wanted to shortcut directly to the g gis and the planner , of how we can do it . now , what 's the state of the art of getting to entrances , um , what 's the syntax for that , how get getting to vista points and calculating those on the spot . and the approach mode , anyhow , is the default . that 's all they do it these days . wherever you 'll find a route planner it n does nothing but get to the closest point where the street network is at minimal distance to the geometric center . professor b : mm - hmm . so , well , let now , this is important . let , uh i want a a again , outside of m almost managerial point , um you 're in the midst of this , so you know better . but it seems to me it 's probably a good idea to li uh minimize the number of uh , change requests we make of them . so it seemed to me , what we ought to do is get our story together . ok ? and think about it some , internally , before asking them to make changes . grad c : mm - hmm . professor b : oh . does this does this make sense to you guys ? it i mean you 're you 're doing the the interaction but it seemed to me that what we ought to do is come up with a uh , something where you , um and i i do n't know who 's mok working most closely on it . probably johno . ok . uh , take what they have , send it to everybody saying `` this is what they have , this is what we think we should add `` , ok ? and then have a d a an iteration within our group saying `` hmm , well `` ok ? and get our best idea of what we should add . grad c : mm - hmm . professor b : and then go back to them . is i or , i do n't know does this make sense to you ? or grad c : yeah . especially if we want sort of , what i my feeling was eh we we sort of reserved something that has a r eh an ok label . that 's th that was my th first sort of step . professor b : mm - hmm . grad c : i w no matter how we want to call it , this is sort of our playground . professor b : right . grad c : and if we get something in there that is a structure elaborate and and and and and complex enough to to to maybe enable a whole simulation , one of these days , that would be u the the perfect goal . professor b : right . that 's right . so . so , yeah . the problem is n't the short ra range optimization . it 's the sort of o one or two year kind of thing . ok . what are the thl class of things we think we might try to do in a year or two ? how how would we try to characterize those and what do we want to request now that 's leave enough space to do all that stuff ? grad c : mm - hmm . professor b : right . and that re that requires some thought . and so that sounds like a great thing to do as the priority item um , as soon as we can do it . so y so you guys will send to the rest of us um a version of um , this , and the uh , description grad a : with sugge yeah , suggested improvements and professor b : well b yeah . so , the the uh not everyone uh , reads german , so if you 'd um tu uh , tur change the description to , uh , english and , um , then then , yeah . then , with some sug s suggestions about where where do we go from here ? uh , this and this , of course , was just the action end . uh , at some point we 're going to have to worry about the language end . but for the moment just uh , t for this class of of things , we might want to try to encompass . and grad a : then the scope of this is beyond approach and vis - or vista . yeah , yeah . professor b : oh , yeah , yeah yeah yeah . this is this is everything that that , um , you know , um we might want to do in the next couple years . grad a : yeah , yeah . so what would professor b : we do n't i mean , that 's an issue . we do n't know what , entirely . grad a : uh , yeah . but i 'm just but the yeah , ok . so i just this xml stuff here just has to do with source - path - goal type stuff , in terms of traveling through heidelberg . or travel , specifically . professor b : right . grad a : so , but this o is the domain greater than that ? professor b : i think i think the i the idea is that oh . it 's beyond source - path - goal , but i think we do n't need to get beyond it @ @ { comment } tourists in heidelberg . it seems to me we can get all the complexity we want in actions and in language without going outside of tourists in heidelberg . ok ? but you know , i depending on what people are interested in , one could have , uh , tours , one could have um , explanations of why something is is , you know , why why was this done , or i mean , no there 's no end to the complexity you can build into the uh , what a tourist in heidelberg might ask . so , at least unless somebody else wants t to suggest otherwise i think the general domain we do n't have t to uh , broaden . that is , tourists in heidelberg . and if there 's something somebody comes up with that ca n't be done that way , then , sure . w we 'll we 'll look at that , but uh i 'd be s i i 'd be surprised at if there 's any important issue that that and , um i mean if if you want to uh , push us into reference problems , that would be great . ok , so this is his specialty is reference , grad c : mm - hmm . professor b : and you know , what what are these things referring to ? not only anaphora , but , uh , more generally the , uh this whole issue of , uh , referring expressions , and , what is it that they 're actually dealing with in the world ? grad c : mm - hmm . professor b : and , again , this is li in the databa this is also pretty well formed because there is an ontology , and the database , and stuff . so it is n't like , um , you know , the evening star or stuff like that . phd f : right . professor b : i i it all the entities do have concrete reference . although th the to get at them from a language may not be trivial . phd f : right . professor b : there are n't really deep mysteries about um , what w what things the system knows about . phd f : right . right . and you have both proper names and descriptions professor b : all those things . phd f : and y and you can ask for it . professor b : yeah . you have proper names , and descriptions . grad c : mm - hmm . phd f : right . professor b : and a l and a lot and and anaphora , and pronouns , phd f : ok . right . professor b : and all those things . phd f : right . grad c : now , we hav the the whole unfortunately , the whole database is , uh , in german . we have just commissioned someone to translate some bits of it , ie the e the shortest k the the more general descriptions of all the objects and , um , persons and events . so , it 's a relational database with persons , events , and , um , objects . and it 's it 's quite , um , there . but did y i uh i think there will be great because the reference problem really is not trivial , even if you have such a g well - defined world . professor b : he knows . grad c : ah - he you are not , uh , throwing uh , uh , carrying owls to athens . grad a : could you give me an example of a reference problem ? so so l i can make it more concrete ? grad c : well how do i get to the powder - tower ? we sort of t think that our bit in this problem is interesting , but , just to get from powder - tower to an object i id in a database is also not really trivial . phd f : or or if you take something even more scary , um , `` how do i get to the third building after the tower ? the ple - powder - tower ? `` uh , you need some mechanism for professor b : yeah . or , you know , the church across from city hall , or grad a : or the re the restaurant where they wear lederhosen ? grad c : or the phd f : right . grad a : or is that professor b : yeah , that would be fine . phd f : right . professor b : yeah . grad c : o or or tower , or this tower , or that building , or phd f : right . grad e : uniquely . grad a : ok . trying to professor b : or you can say `` how `` you know , `` how do i get back ? `` grad a : yeah , yeah . professor b : ok . and , again , it 's just a question of which of these things , uh , people want to dive into . what , uh , i think i 'm gon na try to do , and i guess , pwww ! let 's say that by the end of spring break , i 'll try to come up with some general story about , um , construction grammar , and what constructions we 'd use and how all this might fit together . there 's this whole framework problem that i 'm feeling really uncomfortable about . and i have n't had a chance to think about it seriously . but i i want to i want to do that early , rather than late . and you and i will probably have to talk about this some . grad c : u u u u that 's what strikes me , that we sort of the de g uh , small something , uh , maybe we should address one of these days , is to that most of the work people actually always do is look at some statements , and and analyze those . whether it 's abstracts or newspapers and stuff like this . but the whole i is it is it really relevant that we are dealing mostly with , sort of , questions ? professor b : oh , yeah ? grad c : uh , you know professor b : well , i mean yeah , i d grad c : and this is it seems to me that we should maybe at least spend a session or or brainstorm a little bit about whether that l this is special case in that sense . grad d : mm - hmm . grad c : um , i do n't know . you know did we ever find m metaphorical use in in questions in in that sense , really ? professor b : yeah . you will . grad c : and how soon , professor b : oh , yeah . grad c : i do n't know . professor b : i mean , uh , we could take all the standard metaphor examples and make question versions of them . ok . grad c : `` who got kicked out of france ? `` professor b : yeah , or , you know . `` wh - why is he why is he pushing for promotion ? `` phd f : right . professor b : or , `` who 's pushing proof `` er , just pick pick any of them and just do the eh grad c : mm - hmm . professor b : so i do n't i do n't think , uh , it 's at all difficult uh , to convert them to question forms that really exist and people say all the time , um and sort of we do n't know how to handle them , too . right ? i mean , it 's i d it we do n't know how to handle the declarative forms , @ @ { comment } really , and , then , the interrogative forms , ah - oh . uh . yeah . nancy , it looked like you were s grad e : oh . it 's just that that the goals are g very different to cases so we had this problem last year when we first thought about this domain , actually , was that most of the things we talked about are our story understanding . professor b : right . grad e : uh , we 're gon na have a short discourse and the person talking is trying to , i do n't know , give you a statement and tell you something . and here , it 's th grad c : help you create a mental model , blah - blah - blah . yeah . grad e : yea - eh y yeah , i guess so . and then here , y you are j uh , the person is getting information and they or may not be following some larger plan , you know , that we have to recognize or , you know , infer . and th th the their discourse patterns probably do n't follo follow quite as many logical connec professor b : right . no , i think that 's one of things that 's interesting , is is in this sort of over - arching story we we worked it out for th as you say , this the storytelling scenario . grad e : yeah . mm - hmm . professor b : and i think it 's really worth thinking through what it looks like . grad e : mm - hmm . professor b : what is the simspec mean , et cetera . grad e : mm - hmm . m right . cuz for a while we were thinking , `` well , how can we change the , um , data to sort of illicit tha illicit , um , actions that are more like what we are used to ? `` but obviously we would rather , you know , try to figure out what 's what 's , you know professor b : well , i do n't know . i mean , maybe maybe that 's what we 'll do is is s u e we can do anything we want with it . i mean , once we have fulfilled these requirements , grad e : yep . mmm mm - hmm . mm - hmm . professor b : ok , and the one for next uh , summer is just half done and then the other half is this , um , `` generation thing `` which we think is n't much different . grad e : mm - hmm . professor b : so once that 's done , then all the rest of it is , uh , sort of , you know , what we want to do for the research . and we can w we can do all sorts of things that do n't fit into their framework at all . th - there 's no reason why we 're c we 're constrained to do that . grad e : mm - hmm . professor b : if we can use all the , uh , execution engines , then we can , you know , really try things that would be too too much pain to do ourselves . grad e : mm - hmm . professor b : but there 's no obligation on any of this . so , if we want to turn it into u understan standing stories about heidelberg , we can do that . i mean , that would just be a t a um grad c : or , as a matter of fact , we need and if we if we ' r eh take a ten year perspective , we need to do that , because w e w a assuming we have this , um , we we ta in that case we actually do have these wonderful stories , and historical anecdotes , professor b : yeah . grad c : and knights jumping out of windows , and - and - and { comment } { comment } tons of stuff . so , th the database is huge , and if we want to answer a question on that , we actually have to go one step before that , and understand that . in order to e do sensible information extraction . grad e : mm - hmm . yeah . mm - hmm . professor b : you might , yeah . grad c : and so , um , this has been a a a deep map research issue that was is is part of the unresolved , and to - do 's , and something for the future , is how can we sort of run our our text , our content , through a machine that will enable us , later , to retrieve or answer e questions more sensibly ? phd f : mwa mm - hmm . grad e : mm - hmm . mmm . professor b : right . anyway . s who 's going ? phd f : so , uh so , uh , i was just going to ask , um , so , what is the the basic thing that that you are , um , obligated to do , um , uh , by the summer before w uh y c we can move professor b : ah ! ok . so eh yeah . so , what happened is , there 's this , eh , uh robert was describing the there 's two packages there 's a , uh , quote parser , there 's a particular piece of this big system , which , in german , uh , takes these t sentence templates and produces xml structures . and one of our jobs was to make the english equivalent of that . phd f : right . professor b : that , these guys did in a in a day . phd f : right . right . professor b : the other thing is , at the other end , roughly at the same level , there 's something that takes , uh , x m l structures , produces an output xml structure which is instructions for the generator . phd f : right . professor b : ok ? and then there 's a language generator , and then after that a s a synthesizer that goes from an xml structure to , uh , language generation , to actual specifications for a synthesizer . eh , but again , there 's one module in which there 's one piece that we have to convert to english . phd f : right . right . got it . professor b : is that ok . and that but as i say , this is all along was viewed as a kind of a m a minor thing , necessary , but but not phd f : right . right . professor b : and much more interesting is the fact that , as part of doing this , we we are , you know , inheriting this system that does all sort of these other things . phd f : that 's great ! right . professor b : not precisely what we want , and that 's that 's wh where it it gets difficult . and i i do n't pretend to understand yet what i think we really ought to do . grad c : ok . so , e enough of that , but i , uh , um , mmm , the e sort of , johno and i will take up that responsibility , and , um , get a first draft of that . now , we have um just , i think two more short things . um , y you guys sort of started fighting , uh , on the bayes - net `` noisy - or `` front ? grad d : hmm . yeah , i thought i should , um , talk a little bit about that , because that might be a good , uh , sort of architecture to have , in general for , uh , problems with , you know , multiple inputs to a node . professor b : good ! ok . good . and what 's the other one ? so that just we know what the d agenda is ? grad c : um , the wu paper , i think maybe professor b : oh , yeah . i 've got a couple new wu papers as well . uh , so i i 've been in contact with wu , so , probably let 's put that off till i i till i understand better , uh , what he 's doing . it 's just a little embarrassing cause all this was in his thesis and i was on his thesis committee , and , so , i r really knew this at one time . but , i i it 's not only uh is part of what i have n't figured out yet is is how all this goes together . so i 'll dig up some more stuff from dekai . and so why do n't we just do the , uh grad d : ok . so should i is there a white board here that i can use ? professor b : yeah . you could grad d : uh grad e : yeah . professor b : squealing sound ? grad d : or shall i just use this ? professor b : it 's probably just as easy . i phd f : yeah . grad d : yeah . grad a : you can put the microphone in your pocket . i was envying you and your pocket cause i do n't have one . grad e : it was a quick one , huh ? professor b : that 's why they invented `` pocket t 's `` . grad a : exactly grad e : they have clips ! grad d : yeah . so , um recall that , uh , we want to have this kind of structure in our bayes - nets . namely , that , um you have these nodes that have several bands , right ? so does i mean , they sort of the typical example is that , um , these are all a bunch of cues for something , and this is a certain effect that we 'd like to conclude . so , uh like , let 's just look at the case when , um , this is actually the the final action , right ? so this is like , uh , you know , touch , or grad c : e - eva grad d : sorry . uh yeah , e - eva , right ? grad c : yeah . grad d : enter , v view , approach , right ? phd f : w what was this ? it i i i ehhh , { comment } i ehhh . professor b : wri - write it out for for grad d : so , this is yeah . enter , phd f : i mean grad d : view , approach . phd f : ok . right . grad d : right . so , i mean , we 'd like to take all these various cues , right ? phd f : like the army . grad d : so this one might be , say , uh grad e : new terminology ? phd f : yeah . grad d : well , let me pick a random one grad e : i have n't heard that before . grad d : and say , uh i do n't know , it could be , like this is n't the way it really is , but let me say that , suppose someone mentioned , uh , admission fees ah , it takes too long . try let me just say `` landmark `` . if the thing is a landmark , you know , um then there 's another thing that says if um if it 's closed or not , at the moment . alright , so you have nodes . right ? and the , uh , problem that we were having was that , you know , given n - nodes , there 's `` two to the n `` given n - nodes , and furthermore , the fact that there 's three things here , we need to specify `` three times `` , uh , `` two to the n `` probabilities . right ? that 's assuming these are all binary , which f they may not be . for example , they could be `` time of day `` , in which case we could , uh , say , you know , `` morning , afternoon , evening , night `` . so , this could be more so , it 's a lot , anyway . and , that 's a lot of probabilities to put here , which is kind of a pain . so noisy - ors are a way to , uh , sort of deal with this . um where should i put this ? so , the idea is that , um , let 's call these , uh , c - one , c - two , c - three , and c - four , and e , for cause and effect , i guess . the idea is to have these intermediate nodes . right . well , actually , the idea , first of all , is that each of these things has a quote - unquote distinguished state , which means that this is the state in which we do n't really know anything about it . so right ? so , for example , if we do n't really know if the thing is a landmark or not , or , i if that just does n't seem relevant , then that would be th sort of the disting - the distinguish state . it 's a really , you know , if there is something for the person talking about the admission fee , you know , if they did n't talk about it , that would be the distinguish state . grad c : s so , this is a fanciful way of saying `` default `` ? grad d : so yeah , yeah . that 's just what they the word they used in that paper . grad c : mm - hmm . grad d : so , the idea is that , um , you have these intermediate nodes , right ? e - one , e - two , e - three and e - four ? professor b : so , this is the heckerman paper you 're working with ? good . grad d : yeah . so the idea is that , each of these ei is represents what this would be if all the other ones were in the distinguish state . right ? so , for example , suppose that the person i mean , suppose the thing that they talked about is a landmark . but none of the other sort of cues really apply . then , this would be w the this would just represent the probability distribution of this , assuming that this cue is turned on and the other ones just did n't apply ? so , you know , if it is a landmark , and no none of the other things really ap applicable , then this would represent the probability distribution . so maybe in this case maybe we just t k maybe we decide that , if the thing 's a landmark and we do n't know anything else , then we 're gon na conclude that , um they want to view it with probability , you know , point four . they want to enter it with probability , uh with probability point five and they want to approach it probability point one , say right ? so we come up with these l little tables for each of those ok . and the final thing is that , um this is a deterministic function of these , so we do n't need to specify any probabilities . we just have to , um , say what function this is , right ? so we can let this be , um g of e - one comma e - two . e - three , e - four . right ? and our example g would be , um , a majority vote ? right ? professor b : well . ok , so th so the important point is w not what the g function is . the important point is that um there is a a a general kind of idea of shortcutting the full cpt . th - c the full conditional probability table with some function . ok ? which y w you choose appropriately for each case . so , depending on what your situation is , there are different functions which are most appropriate . and so i gave eh bhaskara a copy of this , eh sort of `` ninety - two `` { comment } paper . d and you got one , robert . grad d : mm - hmm . professor b : i do n't know who else has seen it . grad d : there 's i mean yeah . it 's heckerman and breese . professor b : it 's short . it 's short . grad d : yeah . professor b : so , i u w um , yo uh you have you read it yet ? grad d : uh , you can yeah , you should take a look at it , i guess . professor b : ok , so you should take a look . nancy , i 'm sure you read it at some point in life . grad e : i yeah . i i think so , yeah . professor b : ok . and so , you other guys can decide how interested grad e : yeah , @ @ . professor b : anyway . so the paper is n't th is n't real hard . and uh one of the questions just come at bhaskara is , `` how much of this does javabayes support ? `` grad d : yeah , it 's a good question . um the so what we want , is basically javabayes to support deterministic , uh , functions . professor b : right . grad d : and , um in a sense it sup we can make it supported by , um , manually , uh , entering , you know , probabilities that are one and zeros , right ? professor b : right . so the little handout that the little thing that i sent i sent a message saying , uh , here is a way to take one thing you could do , which is kind of s in a way , stupid , is take this deterministic function , and use it to build the cpt . so , if ba - javabayes wo n't do it for you , that you can convert all that into what the cpt would be . um and , what i sent out about a week ago , was an idea of how to do that , for , um , evidence combination . so one of one function that you could use as your `` g function `` is an e e evidence - combining . so you just take the uh , if each of th if each of the ones has its own little table like that , then you could take the , uh , strength of each of those , times its little table , and you 'd add up the total evidence for `` v `` , `` e `` , and `` a `` . grad d : mmm . i do n't think you can do this , because g is a function from that to that . grad e : mm - hmm . professor b : yep . right . grad d : right ? so there 's no numbers . there 's just quadruplets of well , n - duplets of , uh , e vs . professor b : i i i no , no but i 'm saying is there there is a w i mean , if y if if you decide what 's what is appropriate , is probablistic evidence combination , you can write a function that does it . it 's a pui it 's actually one of the examples he 's got in there . but , anyway , s skipping skipping the question of exactly which functions now is it clear that you might like to be able to shortcut the whole conditional probability table . grad c : i mean , in some it seems very plausible in some sense , where we will be likely to not be observe some of the stuff . cuz we do n't have the a access to the information . grad d : oops , { comment } sorry . professor b : right . that 's one of the problems , is , w is is , where would th where would it all come from ? grad c : yeah . so . grad d : is oh , right . w would not be ab able to observe what ? grad c : i if it 's a a a discar discourse initial phrase , we will have nothing in the discourse history . so , if if we ever want to wonder what was mention grad d : oh oh . a are you saying that we 'll not be able to observe certain nodes ? that 's fine . that is sort of orthogonal thing . professor b : yeah , so there 's there 's two separate things , robert . the f the the the bayes - nets in general are quite good at saying , `` if you have no current information about this variable just take the prior for that . `` ok ? th - that 's what they 're real good at . so , if you do n't have any information about the discourse , you just use your priors of of whatever eh the discourse uh , eh , basically whatever w it 's probabilistically , whatever it would be . and it 's it 's sort of not a great estimate , grad c : mm - hmm . professor b : but it 's the best one you have , and , so forth . so that , they 're good at . but the other problem is , how do you fill in all these numbers ? and i think that 's the one he was getting at . grad e : mm - hmm . grad d : yeah . so , specifically in this case you have to f have this many numbers , grad e : yeah . grad d : whereas in this case you just have to have three for this , three for this , three for this . right ? grad c : mm - hmm . grad d : so you have to have just three n ? so , this is much smaller than that . grad a : asymptotically . grad e : mm - hmm . professor b : well , pretty quickly . grad d : yeah . right . grad a : u yeah , yeah . professor b : i mean grad e : so , you do n't need da data enough to cover uh , nearly as much stuff . grad d : i do n't know . grad a : so , really , i what a a noisy - or seems to kind of `` neural - net - acize `` these bayes - nets ? professor b : eh well to some no , no . so , `` noisy - or `` is a funny way of referring to this , because the noisy - or is only one instance . grad d : yeah . this is n't a noisy - or anymore . professor b : that one actually is n't a noisy - or . so we 'll have to think of of a way t t grad a : yeah . grad d : it 's a noisy - arg - max or a noisy - whatever . professor b : yeah , whatever . yeah . so eh { comment } um grad a : well , my point was more that we just eh with the neural net , right , eh , things come in , you have a function that combines them and professor b : yeah , it it tha - that 's true . it is a is also more neural - net - like , although uh , it is n't necessarily sum uh , s you know , sum of weights or anything like that . grad a : right . professor b : i mean i you could have , uh , like the noisy - or function , really is one that 's essentially says , uh , take the max . grad d : well , the `` or `` . professor b : same . grad d : right . i guess you 're right . yeah . professor b : uh but anyway . so and , i thi i think that 's the standard way people get around the uh there are a couple other ones . there are ways of breaking this up into s to to subnets and stuff like that . but , um the i think we definitely i think it 's a great idea tha to to pursue that . grad d : yep . so grad c : wha - still sort of leaves one question . it i mean you you can always uh see easily that that i 'm not grasping everything correctly , but what seemed attractive to me in im uh in the last discussion we had , was that we find out a means of of getting these point four , point five , point one , of c - four , not because , you know , a is a landmark or not , but we we we label this whatever object type , and if it 's a garden , it 's point three , point four , point two . if it 's a castle , it 's point eight , point one , point one . if it 's , uh , a town hall , it 's point two , point three , point five . professor b : right . grad c : and so forth . and we do n't want to write this down necessarily every time for something but , uh let 's see . grad d : it 'll be students where else would it be stored ? that 's the question . grad c : well , in the beginning , we 'll write up a flat file . we know we have twenty object types professor b : yeah . grad c : and we 'll write it down in a flat file . professor b : no . so , i is well , let me say something , guys , cuz there 's not there 's a pretty point about this we might as well get in right now . which is the hierarchy that s comes with the ontology is just what you want for this . grad d : mm - hmm . professor b : so that uh , if you know about it let 's say , a particular town hall that , it 's one that is a monument , then , that would be stored there . if you do n't , you look up the hierarchy , eh so , you you you may or so , then you 'd have this little vector of , um , you know , approach mode or eva mode . let 's ok , so we have the eva vector for for various kinds of landmarks . if you know it for a specific landmark you put it there . if you do n't , you just go up the hierarchy to the first place you find one . grad d : ok . so , is the idea to put it in the ontology ? professor b : absolutely . uh , or , link to or but but in any case i view it logically as being in the ontology . it 's part of what you know about a an object , is its eva vector . and , if yo as i say , if you know about a specific object , you put it there . grad d : mm - hmm . professor b : this is part of what dekai was doing . so , when we get to wu , the - e we 'll see w what he says about that . grad d : right . professor b : and , then if you if it is n't there , it 's higher , and if you do n't know anything except that it 's a b it 's it 's a building , then up at the highest thing , you have the pr what amounts to a prior . if you do n't know anything else about a building , uh , you just take whatever your crude approximation is up at that level , grad d : right . professor b : which might be equal , or whatever it is . grad d : yeah . professor b : so , that 's a very pretty relationship between these local vectors and the ontology . and it seems to me the obvious thing to do , unless we find a reason to do something different . grad d : yeah . professor b : does this make sense to you ? grad d : so professor b : bhask - ? grad d : yeah . so , we are but we we 're not doing the ontology , so we have to get to whoever is doing the u ultimately , professor b : indeed . so , that 's another thing we 're gon na need to do , is is , to , either grad d : we have to get them to professor b : we 're gon na need some way to either get a p tag in the ontology , or add fields , or { comment } { comment } some way to associate or , w it may be that all we can do is , um , some of our own hash tables that it th - the th you know , there 's always a way to do that . it 's a just a question of grad a : yeah , hash on object name to , you know , uh , the probabilities or whatever . professor b : i th yeah . e right . and , so , i uh grad c : but it 's , uh well , it strikes me as a what for if we get the mechanism , that will be sort of the wonderful part . and then , how to make it work is is the second part , in the sense that i mean , m the guy who was doing the ontology eh , eh , s ap apologized that i it will take him another through two to three days because they 're having really trouble getting the upper level straight , and right now . the reason is , given the craw bet uh , the the the projects that all carry their own taxonomy and , on all history , they 're really trying to build one top level ontology ft that covers all the eml projects , and that 's , uh , uh , sort of a tough cookie , a little bit tougher than they figured . i could have told them s so . professor b : right . yeah . grad c : uh . but , nevertheless , it 's going to be there by n by , uh , next monday and i will show you what 's what some examples from that for towers , and stuff . and , um , what i do n't think is ever going to be in the ontology , is sort of , you know , the likelihood of , eh , people entering r town halls , and looking at town halls , and approaching town halls , especially since we are b dealing with a case - based , not an instance - based ontology . so , there will be nothing on on that town hall , or on the berkeley town hall , or on the heidelberg town hall , it 'll just be information on town halls . professor b : well , they they they how ar what are they gon na do with instances ? grad c : but what professor b : i mean , you y grad c : well , that 's hhh . that 's that 's al different question . i mean , th the first , they had to make a design question , `` do we take ontologies that have instances ? or just one that does not , that just has the types ? `` and , so , since the d decision was on types , on a d simply type - based , we now have to hook it up to instances . i mean this is professor b : but what i what is smartkom gon na do about that ? grad c : one professor b : cuz , they have instances all the time . grad c : yeah , but the ontology is really not a smartkom thing , in in and of itself . that 's more something that i kicked loose in in eml . so it 's a completely eml thing . professor b : but uh uh smartkom 's gon na need an ontology . grad c : yes , u a w a lot of people are aware of that . professor b : i understand , but is anybody doing anything about it ? grad c : um professor b : ok . it 's a political problem . we wo n't worry about it . grad c : no , but th the r eh i th i still think that there is enough information in there . for example , whether ok . so , th it will know about the twenty object types there are in the world . let 's assume there are only twenty object types in this world . and it will know if any of those have institutional meanings . so , in a sense , `` i `` used as institutions for some s in some sense or the other . which makes them enterable . right ? in a sense . professor b : yeah . anyway . so we may have to grad c : you know . professor b : this is with the whole thing , we may have to build another data stru conceptually , we know what should be done . when we see what people have done , it may turn out that the easiest thing to do is to build a a separate thing that that just pools i i like , i i it it may be , that , the the instance w that we have to build our own instance , uh , things , that , with their types , grad d : yeah , it 's right , we can just assume professor b : and then it goes off to the ontology once you have its type . so we build a little data structure and so what we would do in that case , is , in our instance gadget have our e v and if we d there is n't one we 'd get the type and then have the e v as for the type . so we 'd have our own little , uh , eva tree . and then , for other , uh , vectors that we need . grad d : yeah . right . professor b : so , we 'd have our own little things so that whenever we needed one , we 'd just use the ontology to get the type , grad d : mm - hmm . professor b : and then would hash or whatever we do to say , `` ah ! grad d : mm - hmm . professor b : if it 's that type of thing , and we want its eva vector , pppt - pppt ! { comment } it 's that . `` so , i i think we can handle that . and then but , the combination functions , and whether we can put those in java bayes , and all that sort of stuff , is , uh is the bigger deal . grad d : yeah . professor b : i think that 's where we have to get technically clever . grad a : we could just steal the classes in javabayes and then interface to them with our own code . grad d : um professor b : well , i me ye eh , yeah , the grad d : that requires understanding the classes in javabayes , i guess . @ @ . professor b : yeah , i mean , it 's , uh , e e e e e cute . i mean , you 've been around enough to i mean just ? grad a : well , it depends on professor b : i mean , there 's this huge package which which may or may not be consistent and you know . but , yeah , we could look at it . grad a : well , i was j ok . yeah . professor b : yeah . it 's b it it 's an inter sort of a kind of a it the thing is , it 's kind of an interpreter and i i it expects its data structures to be in a given form , and if you say , `` hey , we 're gon na make a different kind of data structure to stick in there `` grad a : well , no , but that just means there 's a protocol , right ? that you could professor b : it may or may not . i do n't know . that 's the question is `` to what extent does it allow us to put in these g functions ? `` and i do n't know . grad a : well , no , but i mean what i uh the so you could have four different bayes - nets that you 're running , and then run your own write your own function that would take the output of those four , and make your own `` g function `` , is what i was saying . professor b : yeah , that 's fine if it 's if it comes only at the end . but suppose you want it embedded ? grad a : well , then you 'd have to break all of your bayes - nets into smaller bayes - nets , with all the professor b : oh , that yeah , that 's a truly horrible way to do d it . one would hope grad a : yeah , but i 'm just grad c : mm - hmm . professor b : yeah , yeah , yeah , yeah , yeah , you bet . but , at that point you may say , `` hey , java bayes is n't the only package in town . let 's see if there 's another package that 's , eh , more civilized about this . `` now , srini is worth talking to on this , cuz he said that he actually did hack some combining functions into but he does n't remember at least when i talked to him , he did n't remember whether it was an e an easy thing , a natural thing , or whether he had to do some violence to it to make it work . uh . but he did do it . grad d : yeah . i do n't see why the , uh , combining f functions have to be directly hacked into i mean , they 're used to create tables so we can just make our own little functions that create tables in xml . professor b : well , i say that 's one way to do it , is is to just convert it int into a into a c p t that you zip it 's blown up , and is a it 's , uh it 's huge , but it does n't require any data fitting or complication . grad d : mm - hmm . yeah . i do n't think i mean , the fact that it blown u blows up is a huge issue in the sense that i mean , ok . so say it blows up , right ? so there 's , like , the you know , ten , f ten , fifteen , uh , things . it 's gon na be like , two to the that , which is n't so bad . professor b : i i understand . i 'm just saying tha that w that was wi that was my note . the little note i sent said that . it said , `` here 's the way you 'd take the logical f g function and turn it into a cpt . `` grad d : mm - hmm . mm - hmm . professor b : i mean that the max - the evidence - combining function . so we could do that . and maybe that 's what we 'll do . but , um do n't know . so , i will , e e before next week , uh , @ @ { comment } p push push some more on on this stuff that dekai wu did , and try to understand it . uh , you 'll make a couple of more copies of the heckerman paper to give to people ? grad d : p sure . phd f : yeah , i i would like a copy , y y yeah . professor b : and , um i think grad c : ok . and i i 'll i 'll think s through this , uh , eh getting eva vectors dynamically out of ontologies one more time because i s i i i 'm not quite sure whether we all think of the same thing or not , here . professor b : well , you and i should talk about it . grad c : yeah , uh - huh . ok . professor b : alright , great ! and , robert , thank you for coming in under he he 's been sick , robert . grad a : i was thinking maybe we should just cough into the microphone and see if they ca n't th see if they can handle it . grad e : mm - hmm . sure ."
}