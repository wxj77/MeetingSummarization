{
    "query": "<s> summarize the discussion about designing the new spg schema based on a more flexible organization",
    "answer": "grad b : the r uh the in terms of why is it 's laid out like this versus some other grad c : the people grad e : yeah . yeah . grad b : um that 's kind of a contentious point between the two of us but this is one wa so this is a way to link uh the way these roles are filled out to the action . grad e : in my view . grad b : because if we know that enter is a t is an spg action , grad e : mm - hmm . grad b : right ? grad e : mm - hmm . grad b : we know to look for an spg schema and put the appropriate fill in the appropriate roles later on . grad e : mm - hmm . yeah . grad g : and you could have also indicated that by saying `` enter , what are the kinds of action i am ? `` grad c : mm - hmm , yeah . grad b : right . grad e : yeah . grad g : right ? so there 's just like sort of reverse organization , right ? so like unless @ @ are there reasons why one is better than the other i mean that come from other sources ? grad e : again grad c : yes because nobod no the modules do n't grad g : yeah . uh grad c : this is this is a schema that defines xml messages that are passed from one module to another , grad g : mm - hmm . grad c : mainly meaning from the natural language understanding , or from the deep language understanding to the action planner . grad g : mm - hmm . grad c : now the the reason for for not using this approach is because you always will have to go back , each module will try have to go back to look up which uh you know entity can have which uh , you know , entity can have which parents , and then so you always need the whole body of of y your model um to figure out what belongs to what . or you always send it along with it , grad g : mm - hmm . mm - hmm . grad c : nuh ? so you always send up `` here i am i am this person , and i can have these parents `` in every message . grad g : mm - hmm . grad c : which e grad g : ok , so it 's just like a pain to have to send it . grad c : it may or may not be a just a pain it 's it 's i 'm completely willing to to to throw all of this away grad g : ok , i understand . grad c : and completely redo it , grad e : well grad c : you know and and and it after some iterations we may just do that . grad g : mm - hmm . grad e : i i would just like to ask um like , if it could happen for next time , i mean , just beca cuz i 'm new grad c : mm - hmm . grad e : and i do n't really just i just do n't know what to make of this and what this is for , and stuff like that , you know , so if someone could make an example of what would actually be in it , grad c : yeah . grad e : like first of all what modules are talking to each other using this , grad c : yeah , we i will promise for the next time to have fleshed out n { comment } xml examples for a a run through and and see how this this then translates , grad e : right ? and ok . grad c : and how this can come about , grad g : be great . grad c : nuh ? including the sort of `` miracle occurs here `` um part . grad e : right . grad c : and um is there more to be said ? i think um in principle what i i think that this approach does , and e e whether or not we take the enter - view and we all throw up up the ladder um wha how do how does professor peter call that ? grad g : yeah . grad c : the uh hhh , { comment } silence su sublimination ? throwing somebody up the stairs ? have you never read the peter 's principle anyone here ? grad e : nope . phd a : oh , uh grad f : people reach their level of uh max their level of at which they 're incompetent or whatever . phd a : yeah . grad c : maximum incompetence phd a : yeah . right , right . grad c : and then you can throw them up the stairs grad e : alright . grad c : um . yeah . phd a : promote them , yeah . grad c : ok , so we can promote enter - view all all up a bit and and get rid of the uh blah - blah - x - blah uh asterisk sub - action item altogether . no no problem with that and we w we we will play around with all of them but the principal distinction between having the the pure schema and their instantiations on the one hand , and adding some whatever , more intention oriented specification um on parallel to that that this approach seems to be uh workable to me . i do n't know . if you all share that opinion then that made my day much happier . grad b : this is a simple way to basically link uh roles to actions . grad g : uh yeah wait r yeah , yeah . that 's fine . grad b : that 's the that was the intent of of it , basically . grad e : sure . sure . grad g : uh that 's true . grad c : yeah . grad g : although um roles grad b : so i i do i 'm i 'm not grad c : i 'm i 'm never happy when he uses the word `` roles `` , grad g : yeah i i grad c : i 'm grad g : yeah . i was going to grad b : i b i mean rolls so grad g : bread rolls ? grad e : oh you meant pastries , then ? grad b : yeah , pastries is what i 'm talking about . grad g : pastry oh ba oh the bak bakery example . undergrad d : bakery . bakery . grad e : this is the bakery example . got it . alright . grad g : i see . right . ok . grad e : help ! grad g : i guess i 'll agree to that , then ."
}