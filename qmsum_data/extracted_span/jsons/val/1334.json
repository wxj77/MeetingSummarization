{
    "query": "<s> what was the general discussion of the meeting ?",
    "answer": "professor c : good . yeah . ok so , let 's get started . nancy said she 's coming and that means she will be . um . my suggestion is that robert and johno sort of give us a report on last week 's adventures uh to start . so everybody knows there were these guys f uh from heidelber - uh , uh , actually from uh dfki uh , part of the german smartkom project , who were here for the week and , i think got a lot done . grad e : yeah , i think so too . um . the we got to the point where we can now speak into the smartkom system , and it 'll go all the way through and then say something like `` roman numeral one , am smarticus . `` it actually says , `` roemisch einz , am smarticus , `` which means it 's just using a german sythesis module for english sentences . so uh , professor c : it does n't know `` i `` . grad e : um , the uh grad b : oh , am spartacus . `` grad d : `` i am sm - i am smarticus `` is what it 's saying . phd a : right . grad b : verstehe . ok . grad e : the uh sythesis is just a question of um , hopefully it 's just a question of exchanging a couple of files , once we have them . and , um , it 's not going to be a problem because we decided to stick to the so - called concept to speech approach . so i 'm i 'm i 'm going backwards now , so `` synthesis `` is where you sort of make this uh , make these sounds , and `` concept to speech `` is feeding into this synthesis module giving it what needs to be said , and the whole syntactic structure so it can pronounce things better , presumably . then , just with text to speech . grad b : mm - hmm . grad e : and , uh , johno learned how to write xml tags . uh , and did write the tree adjoining grammar for some some sentences . no , right ? grad d : yeah . grad e : yeah , for a couple grad d : so . bu - uh , i the way the uh , the dialogue manager works is it dumps out what it wants to know , or what it wants to tell the person , to a er in xml and there 's a conversion system for different uh , to go from xml to something else . and th so , the knowledge base for the system , that generates the syntasti syntactic structures for the ge generation is uh , in a lisp - like the knowledge base is in a lisp - like form . and then the thing that actually builds these syntactic structures is something based on prolog . so , you have a basically , a goal and it , you know , says `` ok , well i 'm gon na try to do the greet - the - person goal , grad b : mm - hmm ."
}